name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  security-events: write
  actions: read
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check app/ --output-format=github --ignore W293
    
    - name: Format check with black
      run: |
        black --check app/
    
    - name: Type check with mypy
      run: |
        mypy app/ --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest app/tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  deploy-to-server:
    # Проверяем, что PR не из форка
    if: github.event.pull_request.head.repo.full_name == github.repository
  
    runs-on: ubuntu-latest
    
    steps:
    - name: Verify PR is not from fork
      if: github.event.pull_request.head.repo.fork
      run: |
        echo "PR from fork repository - skipping deployment"
        exit 1
    
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Update DEVEL directory and sync with production
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          echo "Deploying branch: ${{ github.head_ref }}"
          
          # Переходим в каталог разработки
          cd /opt/services/DEVEL/parser
          
          # Очищаем любые локальные изменения
          git clean -fd
          git fetch origin
          git checkout -f ${{ github.head_ref }}
          git reset --hard origin/${{ github.head_ref }}
          
          # Синхронизируем с production каталогом, исключая .git
          rsync -av --delete --exclude='.git/' /opt/services/DEVEL/parser/ /opt/services/parser/
          docker compose -f docker-compose.prod.yml down --rmi all
          docker compose -f docker-compose.prod.yml up -d
          
          echo "✅Deployment completed successfully!"
        EOF

    - name: Debug info
      run: |
        echo "PR branch: ${{ github.head_ref }}"
        echo "PR number: ${{ github.event.pull_request.number }}"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
